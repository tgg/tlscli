//Telecom Log Service, v1.1.1 - OMG IDL Summary File
//Object Management Group, Inc.
//
//Copyright 1998, Alcatel Corporate Research Center
//Copyright 1998, Cooperative Research Centre for Distributed Systems Technology
//(DSTC)
//Copyright 1998, Expersoft Corporation
//Copyright 1998, Hewlett Packard Company
//Copyright 1998, Nortel Technology
//Copyright 1998, Telefónica Investigación y Desarrollo S.A. Unipersonal
//
//The companies listed above have granted to the Object Management Group, Inc. 
//(OMG) a nonexclusive, royalty-free, paid up, worldwide license to copy and 
//distribute this document and to modify this document and distribute copies of 
//the modified version. Each of the copyright holders listed above has agreed 
//that no person shall be deemed to have infringed the copyright in the included 
//material of any such copyright holder by reason of having used the 
//specification set forth herein or having conformed any computer software to 
//the specification. 
//
//This file contains OMG IDL from the Telecom Log Service, v1.1 specification.
//OMG regularly publishes a summary file that contains all the "code" parts of 
//an OMG formal document. Every formal document line that is IDL, PIDL, or 
//language code is included in the summary file. The reason for such a listing 
//is to give readers an electronic version of the "code" so that they can 
//extract pieces of it. Readers might want to test an example, include it in 
//their own code, or use it for documentation purposes. Having the code lines 
//available electronically means there is less likelihood of a transcription 
//error. 
//
//DsNotifyLogAdmin Module

#ifndef _DS_NOTIFY_LOG_ADMIN_IDL_
#define _DS_NOTIFY_LOG_ADMIN_IDL_

#include <DsEventLogAdmin.idl>
#include <CosNotifyChannelAdmin.idl>
#include <CosNotifyFilter.idl>
#include <CosNotification.idl>

#pragma prefix "omg.org"

module DsNotifyLogAdmin
{
	interface NotifyLog :
		DsEventLogAdmin::EventLog,
		CosNotifyChannelAdmin::EventChannel
	{
		CosNotifyFilter::Filter get_filter();
		void set_filter(in CosNotifyFilter::Filter filter);
	};

	interface NotifyLogFactory :
		DsLogAdmin::LogMgr,
		CosNotifyChannelAdmin::ConsumerAdmin
	{
		NotifyLog create (
			in DsLogAdmin::LogFullActionType full_action,
			in unsigned long long max_size,
			in DsLogAdmin::CapacityAlarmThresholdList thresholds,
			in CosNotification::QoSProperties initial_qos,
			in CosNotification::AdminProperties initial_admin,
	 		out DsLogAdmin::LogId id)
		raises (DsLogAdmin::InvalidLogFullAction,
			DsLogAdmin::InvalidThreshold,
			CosNotification::UnsupportedQoS,
			CosNotification::UnsupportedAdmin);

		NotifyLog create_with_id (
			in DsLogAdmin::LogId id,
			in DsLogAdmin::LogFullActionType full_action,
			in unsigned long long max_size,
			in DsLogAdmin::CapacityAlarmThresholdList thresholds,
			in CosNotification::QoSProperties initial_qos,
			in CosNotification::AdminProperties initial_admin)
		raises (DsLogAdmin::LogIdAlreadyExists,             
			DsLogAdmin::InvalidLogFullAction,
			DsLogAdmin::InvalidThreshold,
			CosNotification::UnsupportedQoS,       
			CosNotification::UnsupportedAdmin);
	};
};

#endif
