//Event Service Specification, v1.2 - OMG CosEventComm IDL File
//Object Management Group, Inc.
//Copyright © 1993, DEC
//Copyright © 1993, Groupe Bull
//Copyright © 1993, Hewlett-Packard
//Copyright © 1993, Hyperdesk
//Copyright © 1993, Itasca
//Copyright © 1993, Novell
//Copyright © 1993, O2
//Copyright © 1993, Object Design
//Copyright © 2000, Object Management Group, Inc.
//Copyright © 1993, Objectivity
//Copyright © 1993, Ontos
//Copyright © 1993, Oracle
//Copyright © 1993, Servio
//Copyright © 1993, SunSoft
//Copyright © 1993, Tivoli
//Copyright © 1993, Versant
//The companies listed above have granted to the Object Management Group, Inc. 
//(OMG) a nonexclusive, royalty-free, paid up, worldwide license to copy and 
//distribute this document and to modify this document and distribute copies of 
//the modified version. Each of the copyright holders listed above has agreed 
//that no person shall be deemed to have infringed the copyright in the included 
//material of any such copyright holder by reason of having used the 
//specification set forth herein or having conformed any computer software to 
//the specification. 
//
//This file contains OMG IDL from the Naming Service Specification, v1.2.
//OMG regularly publishes a summary file that contains all the "code" parts of 
//an OMG formal document. Every formal document line that is IDL, PIDL, or 
//language code is included in the summary file. The reason for such a listing 
//is to give readers an electronic version of the "code" so that they can 
//extract pieces of it. Readers might want to test an example, include it in 
//their own code, or use it for documentation purposes. Having the code lines 
//available electronically means there is less likelihood of a transcription 
//error. 

#ifndef _COS_EVENT_COMM_IDL_ 
#define _COS_EVENT_COMM_IDL_ 
#pragma prefix "omg.org"  
module CosEventComm 
{ 
	# ifndef _PRE_3_0_COMPILER_
    		typeprefix "omg.org";
	# endif // _PRE_3_0_COMPILER_

	exception Disconnected{};  

	interface PushConsumer 
	{
		void push (in any data) raises(Disconnected);
		void disconnect_push_consumer(); 
	}; 

   interface PushSupplier 
	{
		void disconnect_push_supplier();										
	}; 
}; 
#endif /* ifndef _COS_EVENT_COMM_IDL_ */






















